name: CI Pipeline

on:
  pull_request:
    branches:
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Eravur
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Wait for Kafka to start
        run: sleep 15

      - name: Clean, test, verify
        run: mvn clean verify

      - name: Upload all JARs
        uses: actions/upload-artifact@v4
        with:
          name: jar-files
          path: "**/target/*.jar"


  Docker-compose-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download JAR artifacts
        uses: actions/download-artifact@v4
        with:
          name: jar-files
          path: .

      - name: Verify downloaded files
        run: ls -R

      - name: Remove old containers
        run: docker compose down --rmi all --volumes --remove-orphans

      - name: Start containers
        run: docker compose up -d --build

      - name: Wait for Zookeeper, Kafka, and deal-db to be healthy
        run: |
          for i in {1..20}; do
            HEALTHY_COUNT=$(docker compose ps --format '{{.State}}' | grep -c "healthy")
            if [ "$HEALTHY_COUNT" -eq 3 ]; then
              echo "Zookeeper, Kafka, and deal-db are healthy!"
              exit 0
            fi
            echo "Waiting for Zookeeper, Kafka, and deal-db..."
            sleep 5
          done
          echo "Some services did not become healthy in time"
          docker compose ps
          docker compose logs
          exit 1

      - name: Stop Docker-Compose
        run: docker compose down --volumes